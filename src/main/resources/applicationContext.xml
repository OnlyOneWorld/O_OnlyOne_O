<?xml version="1.0" encoding="UTF-8"?>    
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"    
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util" xmlns:jdbc="http://www.springframework.org/schema/jdbc"    
    xmlns:cache="http://www.springframework.org/schema/cache"    
    xsi:schemaLocation="    
    http://www.springframework.org/schema/context    
    http://www.springframework.org/schema/context/spring-context.xsd    
    http://www.springframework.org/schema/beans    
    http://www.springframework.org/schema/beans/spring-beans.xsd    
    http://www.springframework.org/schema/tx    
    http://www.springframework.org/schema/tx/spring-tx.xsd    
    http://www.springframework.org/schema/jdbc    
    http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd    
    http://www.springframework.org/schema/cache    
    http://www.springframework.org/schema/cache/spring-cache-3.1.xsd    
    http://www.springframework.org/schema/aop    
    http://www.springframework.org/schema/aop/spring-aop.xsd    
    http://www.springframework.org/schema/util    
    http://www.springframework.org/schema/util/spring-util.xsd">    
    
    <!-- 引入属性文件: config.properties位于src/main/resource目录下 
    <context:property-placeholder location="classpath:config.properties"/>-->
    
    <!-- 这是之前的需要扫描的包，在这里备份一下为了测试为什么用户注册没有持久化数据库
    me.gacl.dao,me.gacl.dao.impl,
    me.gacl.service,
    com.common.base,
    com.matter.lifePlan,com.testajax
    
    <context:component-scan base-package="com.spring"></context:component-scan>-->
    
    <!-- 设置注解自动扫描dao和service包下的Java文件
    <context:component-scan base-package="com.matter.lifePlan.user_register"></context:component-scan>
   	 -->
   	 
   	 <!-- 演示的设值注入 -->
   	 <!-- <bean id="testInjectionDao" class="com.springIoc.dao.Impl.TestInjectionDaoImpl"></bean>
   	 
   	 <bean id="testInjectionService" class="com.springIoc.service.Impl.TestInjectionServiceImpl">
   	 	设值注入，必须在对应的class张提供需要注入对象的setter方法
   	 	<property name="testInjectionDao" ref="testInjectionDao"></property>
   	 </bean> -->
   	 
   	 <!-- 演示的构造注入 -->
   	 <bean id="testInjectionDao" class="com.springIoc.dao.Impl.TestInjectionDaoImpl"></bean>
   	 
   	 <bean id="testInjectionService" class="com.springIoc.service.Impl.TestInjectionServiceImpl">
		<constructor-arg name="testInjectionDao" ref="testInjectionDao"></constructor-arg>
   	 </bean>
   	 
   	 <!-- 测试Spring的Bean的作用域配置项 -->
   	 <bean id="testSpringBeanArea" class="com.spring_stydy.BeanOperation.BeanArea" scope="prototype"></bean>
</beans>
    